env:
  global:
    - SETUP=stable

matrix:
  fast_finish: true
  include:
#    - os: linux
#      dist: xenial
#      language: php
#      php: '7.2'
#      services:
#        - memcached
#        - redis-server
#        - mysql
#    - os: linux
#      dist: xenial
#      language: php
#      php: '7.2'
#      env: SETUP=lowest
#      services:
#        - memcached
#        - redis-server
#        - mysql
#    - os: linux
#      dist: xenial
#      language: php
#      php: '7.3'
#      services:
#        - memcached
#        - redis-server
#        - mysql
#    - os: linux
#      dist: xenial
#      language: php
#      php: '7.3'
#      env: SETUP=lowest
#      services:
#        - memcached
#        - redis-server
#        - mysql
    - os: windows
      language: sh
      env:
        - PHP_VERSION=7.2.20
        - PHP_DIR=php72
        - REDIS_EXT=https://windows.php.net/downloads/pecl/releases/redis/5.0.2/php_redis-5.0.2-7.2-nts-vc15-x64.zip
    - os: windows
      language: sh
      env:
        - PHP_VERSION=7.3.8
        - PHP_DIR=php73
        - REDIS_EXT=https://windows.php.net/downloads/pecl/releases/redis/5.0.2/php_redis-5.0.2-7.3-nts-vc15-x64.zip

cache:
  directories:
    - $HOME/.composer/cache

before_install:
  - if [[ $TRAVIS_OS_NAME != 'windows' ]]; then phpenv config-rm xdebug.ini || true; fi
  - if [[ $TRAVIS_OS_NAME != 'windows' ]]; then echo "extension = memcached.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - if [[ $TRAVIS_OS_NAME != 'windows' ]]; then printf "\n" | pecl install -f redis; fi
  - if [[ $TRAVIS_OS_NAME != 'windows' ]]; then mysql -e 'CREATE DATABASE forge;'; fi

  # Windows: Install PHP and setup PATH
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then export PHP_DIR=$PHP_DIR; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then choco install php --version $PHP_VERSION -y; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then export PATH=/c/tools/$PHP_DIR:$PATH; fi

  # Windows: Install Redis extension
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then travis_retry wget $REDIS_EXT -O /c/tools/redis_ext.zip -q; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then 7z e "c:\tools\redis_ext.zip" -o"c:\tools\php\%PHP_DIR%\ext"; fi
  - dir "c:\tools\php\%$PHP_DIR%\ext"
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_redis.dll" >> /c/tools/$PHP_DIR/php.ini; fi

  # Windows: Modify configuration
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo 'extension_dir="ext"' >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_openssl.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  # Windows: Add Curl (if needed), download CA Bundle and update configuration
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then travis_retry wget https://curl.haxx.se/ca/cacert.pem -O /c/tools/cacert.pem -q; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "curl.cainfo=C:\tools\cacert.pem" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_curl.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_mbstring.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_pdo_mysql.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_pdo_sqlite.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_fileinfo.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_gd2.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "extension=php_ftp.dll" >> /c/tools/$PHP_DIR/php.ini; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then echo "memory_limit=256M" >> /c/tools/$PHP_DIR/php.ini; fi
  # Windows: Install Composer and modify PATH
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then choco install composer -i; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then export PATH=/c/ProgramData/ComposerSetup/bin:$PATH; fi
  # Windows: Install MySQL, modify PATH, ALTER root with a blank password, and CREATE database
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then choco install mysql --version 5.7.18 >/dev/null 2>&1; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then export PATH=/c/tools/mysql/current/bin:$PATH; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then mysql -u root --skip-password -e "SET PASSWORD FOR root@localhost = PASSWORD('');"; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then mysql -u root -e 'CREATE DATABASE forge;'; fi
  # Windows: Install Redis and modify PATH
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then choco install redis-64; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then export PATH=/c/ProgramData/chocolatey/lib/redis-64:$PATH; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then redis-server --service-install; fi
  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then redis-server --service-start; fi

  - travis_retry composer self-update
#  - if [[ $TRAVIS_OS_NAME = 'windows' ]]; then composer require predis/predis; fi

install:
  - if [[ $SETUP = 'stable' ]]; then travis_retry composer update --prefer-dist --no-interaction --prefer-stable --no-suggest; fi
  - if [[ $SETUP = 'lowest' ]]; then travis_retry composer update --prefer-dist --no-interaction --prefer-lowest --prefer-stable --no-suggest; fi

script: vendor/bin/phpunit
